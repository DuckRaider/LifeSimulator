let sequelize,DataTypes,Bank,User;_3ee‍.x([["BankAccount",()=>BankAccount]]);_3ee‍.w("../sequelize/sequelize",[["sequelize",["sequelize"],function(v){sequelize=v}]]);_3ee‍.w("sequelize",[["DataTypes",["DataTypes"],function(v){DataTypes=v}]]);_3ee‍.w("./Bank",[["Bank",["Bank"],function(v){Bank=v}]]);_3ee‍.w("./User",[["User",["User"],function(v){User=v}]]);




       const BankAccount = _3ee‍.a("sequelize",sequelize).define("BankAccounts", {
    iban:{
        type:_3ee‍.a("DataTypes",DataTypes).STRING,
        allowNull:false
    },
    balance:{
        type:_3ee‍.a("DataTypes",DataTypes).DOUBLE,
        allowNull:false
    },
    UserId:{
        type:_3ee‍.a("DataTypes",DataTypes).INTEGER,
        allowNull:false,
        references:{
            model:User,
            key:"id"
        }
    },
    BankId:{
        type:_3ee‍.a("DataTypes",DataTypes).INTEGER,
        allowNull:false,
        references:{
            model:Bank,
            key:"id"
        }
    }
});_3ee‍.j(["BankAccount"]);

