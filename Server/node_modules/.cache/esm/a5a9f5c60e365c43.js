let User,generateAccessToken;_0e3‍.x([["login",()=>login]]);_0e3‍.w("../Models/User",[["User",["User"],function(v){User=v}]]);_0e3‍.w("../utils/jwtGenerator",[["generateAccessToken",["generateAccessToken"],function(v){generateAccessToken=v}]]);


// Controller function to create a new user
       const login = async (req, res) => {
    _0e3‍.g.console.log(req.body)
    const { email, password} = req.body;

    const users = await User.findAll();

    if(users){
        let userFound = false;

        for (const user of users){
            _0e3‍.g.console.log(email)
            _0e3‍.g.console.log(password)


            if(user.dataValues.email == email && user.dataValues.password == password){
                const token = generateAccessToken(user.dataValues);
                res.status(201).json(token);
                userFound = true;
                break;
            }
        };

        if(userFound==false){
            res.status(500).send('Internal Server Error');
        }
    }
    else{
        res.status(500).send('Internal Server Error');
    }
};